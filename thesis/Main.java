package thesis;

import java.util.ArrayList;
import thesis.model.*;

public class Main {

	public static void main(String[] args) {
		
		//Randomly Generated test case
//		ArrayList<Voter> vList = new ArrayList<>();
//		vList.add(new Voter(48.442047,-74.91875,56.00299,81.76355));
//		vList.add(new Voter(5.0317535,65.82732,7.551918,31.049204));
//		vList.add(new Voter(18.001022,67.68257,-66.71231,47.58431));
//		vList.add(new Voter(37.22728,-44.71581,-91.70805,41.1589));
//		vList.add(new Voter(-32.83715,-52.89346,33.51355,129.96039));
//		vList.add(new Voter(20.831642,59.47682,-43.31795,13.711775));
//		vList.add(new Voter(-53.742218,25.536789,43.368988,121.71));
//		vList.add(new Voter(65.14644,-82.72421,-81.11267,190.13509));
//		vList.add(new Voter(64.223785,67.63316,65.27632,167.4743));
//		vList.add(new Voter(-41.828705,12.956154,36.324936,111.36263));
//		vList.add(new Voter(-6.4941025,53.8441,-88.301445,128.68243));
//		vList.add(new Voter(-67.86966,95.273605,91.136566,143.11739));
//		vList.add(new Voter(91.804565,-53.828037,-98.11344,135.8709));
//		vList.add(new Voter(31.788147,-3.7987823,-94.328476,196.91353));
//		vList.add(new Voter(-38.178467,45.97293,-77.69735,112.518776));
//		vList.add(new Voter(-18.979706,-60.603558,90.43945,182.20863));
//		vList.add(new Voter(-17.152534,67.161316,44.9653,52.411842));
//		vList.add(new Voter(-91.07622,2.8821259,66.12482,38.61364));
//		vList.add(new Voter(16.980377,63.228226,-62.782906,111.64986));
//		vList.add(new Voter(18.823364,6.0889816,-97.36184,91.794586));
//		vList.add(new Voter(-82.0403,-7.22731,41.92581,136.76329));
//		vList.add(new Voter(61.84938,28.321594,-58.188545,152.67656));
//		vList.add(new Voter(52.04579,-14.216927,58.886734,92.00689));
//		vList.add(new Voter(-88.66617,33.873505,-99.77163,36.78737));
//		vList.add(new Voter(-21.929848,81.695145,16.201439,171.74965));
//		vList.add(new Voter(25.091019,78.43147,-15.187416,19.05421));
//		vList.add(new Voter(-72.27302,-49.70734,-15.333046,187.98146));
//		vList.add(new Voter(-70.28004,-97.92722,96.18021,159.09402));
//		vList.add(new Voter(-22.628212,77.80513,58.716125,108.30915));
//		vList.add(new Voter(64.38577,-23.92646,43.395355,33.014072));
//		vList.add(new Voter(9.038422,-96.90352,4.208542,186.41553));
//		vList.add(new Voter(-18.892563,63.910324,48.650436,189.96638));
//		vList.add(new Voter(-78.9191,22.627731,-43.621136,174.80713));
//		vList.add(new Voter(14.400192,81.25087,81.52597,15.175843));
//		vList.add(new Voter(67.79181,47.915237,-59.492935,38.77733));
//		vList.add(new Voter(-94.809494,95.39447,-70.13312,25.888597));
//		vList.add(new Voter(-17.455421,-4.5042267,-16.61663,0.86369514));
//		vList.add(new Voter(92.24213,91.53606,-12.054131,152.6638));
//		vList.add(new Voter(70.45178,16.948532,-14.601982,36.679577));
//		vList.add(new Voter(68.90234,51.39232,-77.53352,65.6584));
//		vList.add(new Voter(-55.772472,35.312775,-68.90594,115.85158));
//		vList.add(new Voter(-56.202793,-60.85752,63.09198,94.031166));
//		vList.add(new Voter(20.886673,44.279846,30.279114,135.89627));
//		vList.add(new Voter(-58.824394,-29.700172,-43.431725,156.31865));
//		vList.add(new Voter(97.10953,47.826294,2.2998428,32.220863));
//		vList.add(new Voter(29.921478,51.044876,22.142685,170.61269));
//		vList.add(new Voter(77.54547,70.494736,-57.15921,164.03424));
//		vList.add(new Voter(-20.175255,-81.28556,50.862473,45.59499));
//		vList.add(new Voter(43.02475,-47.68231,45.616776,173.80643));
//		vList.add(new Voter(-90.47898,88.5555,2.470337,166.96165));
//		vList.add(new Voter(14.59243,-42.581238,90.5863,97.0157));
//		vList.add(new Voter(12.5809555,17.516365,-29.003204,88.496315));
//		vList.add(new Voter(94.474396,-28.385254,55.820816,159.27472));
//		vList.add(new Voter(26.550186,-67.23793,-86.21817,113.02775));
//		vList.add(new Voter(-53.46972,41.88121,61.922638,39.52812));
//		vList.add(new Voter(-55.68869,-59.235237,-31.458366,5.7339907));
//		vList.add(new Voter(16.443443,19.3331,-84.10777,0.8657932));
//		vList.add(new Voter(57.959427,-67.76614,-80.77155,20.731712));
//		vList.add(new Voter(85.84363,-92.58895,-14.396599,194.59764));
//		vList.add(new Voter(72.45328,28.815186,13.814835,141.61613));
//		vList.add(new Voter(-95.24671,-11.746811,6.5523605,28.587091));
//		vList.add(new Voter(-70.375786,79.40192,85.76611,137.59334));
//		vList.add(new Voter(-46.806515,-97.22881,99.3051,157.44226));
//		vList.add(new Voter(-57.30431,7.064415,-14.152229,119.07333));
//		vList.add(new Voter(45.48117,-6.261551,-40.925396,0.015163422));
//		vList.add(new Voter(57.285995,32.020157,92.04744,140.06892));
//		vList.add(new Voter(-90.30562,-13.762642,68.117935,118.76106));
//		vList.add(new Voter(-73.06233,-48.271023,-67.22632,39.471878));
//		vList.add(new Voter(49.977737,76.10147,77.15039,105.86143));
//		vList.add(new Voter(19.536804,-53.887104,-67.8732,139.25443));
//		vList.add(new Voter(-69.1947,-75.47206,3.7323608,12.615692));
//		vList.add(new Voter(-44.443478,-5.936325,-34.08029,24.870909));
//		vList.add(new Voter(10.014046,-84.176,3.5916672,31.458462));
//		vList.add(new Voter(-80.12167,-63.184166,3.259529,21.610594));
//		vList.add(new Voter(-8.6345215,-74.70914,-14.897247,94.06045));
//		vList.add(new Voter(86.01608,-95.57376,0.8836899,150.37964));
//		vList.add(new Voter(67.58917,-34.462723,57.65103,84.32291));
//		vList.add(new Voter(-55.112766,33.516068,16.076706,97.36633));
//		vList.add(new Voter(81.306656,32.053894,-68.63064,81.677055));
//		vList.add(new Voter(39.846527,-52.40556,8.877167,64.27085));
//		vList.add(new Voter(43.929764,52.668915,-81.25923,47.951256));
//		vList.add(new Voter(75.51744,-54.30226,15.416649,79.25653));
//		vList.add(new Voter(-78.42727,60.54454,-72.18022,50.1706));
//		vList.add(new Voter(90.02713,50.741867,91.61569,43.507183));
//		vList.add(new Voter(22.212646,-43.337597,-17.66784,72.00487));
//		vList.add(new Voter(-41.42902,5.8996353,50.09436,64.250626));
//		vList.add(new Voter(99.77818,-94.71408,-44.328762,108.182594));
//		vList.add(new Voter(-69.197044,-24.52124,-56.962227,82.336));
//		vList.add(new Voter(28.541916,-85.32423,-36.183964,159.0403));
//		vList.add(new Voter(-4.631462,-93.80933,79.89026,40.9281));
//		vList.add(new Voter(-4.8633804,95.3746,26.454971,146.47774));
//		vList.add(new Voter(11.967072,35.363846,-88.86632,61.609577));
//		vList.add(new Voter(5.7116623,59.665344,-23.89376,57.941402));
//		vList.add(new Voter(-45.349026,94.56981,-41.96057,95.15728));
//		vList.add(new Voter(-87.809555,-71.65296,-28.21611,191.6603));
//		vList.add(new Voter(69.639175,-49.706173,-76.83464,96.48657));
//		vList.add(new Voter(-75.71447,44.76117,-43.233215,24.209236));
//		vList.add(new Voter(66.742966,-52.303505,-22.497513,136.73347));
//		vList.add(new Voter(92.87317,-38.95967,-10.715309,150.57674));
//		vList.add(new Voter(35.572144,79.17636,-12.441292,10.171008));
//		vList.add(new Voter(-74.47554,-42.15994,-29.555618,157.26622));
//		vList.add(new Voter(6.0102615,86.35788,-80.700424,19.633043));
//		vList.add(new Voter(-73.56457,86.35422,95.47594,180.56038));
//		vList.add(new Voter(-42.982365,-77.70691,35.74948,131.34521));
//		vList.add(new Voter(40.69388,80.20271,-37.612736,74.93063));
//		vList.add(new Voter(18.641426,50.079224,-8.811508,178.53918));
//		vList.add(new Voter(-73.23396,74.819916,86.37306,170.67479));
//		vList.add(new Voter(9.182037,34.75894,-82.735954,62.95285));
//		vList.add(new Voter(81.2814,93.26103,-11.168289,135.2178));
//		vList.add(new Voter(-97.21421,-2.716507,94.96835,154.29616));
//		vList.add(new Voter(96.63933,-90.11749,56.601776,69.11191));
//		vList.add(new Voter(-67.69603,-57.516384,11.316231,119.98817));
//		vList.add(new Voter(-55.343437,-12.857903,0.037574768,65.62422));
//		vList.add(new Voter(-1.9215927,-52.593433,-89.30999,30.947887));
//		vList.add(new Voter(-51.58007,95.80286,-22.19912,41.901146));
//		vList.add(new Voter(75.384674,-97.95791,-31.798386,183.94806));
//		vList.add(new Voter(29.703629,-24.885391,-98.24613,110.05077));
//		vList.add(new Voter(-8.4164505,-68.625725,-63.94559,57.017265));
//		vList.add(new Voter(-99.24353,-32.91458,87.096054,98.08583));
//		vList.add(new Voter(78.60242,-4.140236,-56.22971,171.60275));
//		vList.add(new Voter(-93.04121,-32.255363,70.895874,53.52142));
//		vList.add(new Voter(-2.8120499,66.847534,69.28024,173.68245));
//		vList.add(new Voter(20.795143,78.33829,86.42551,66.52321));
//		vList.add(new Voter(76.442276,-95.880974,-59.740353,165.74174));
//		vList.add(new Voter(37.783066,10.686447,-48.785126,134.85352));
//		vList.add(new Voter(15.4748535,24.641693,-26.27797,22.506487));
//		vList.add(new Voter(-68.55537,3.4714584,3.4991837,59.464108));
//		vList.add(new Voter(-46.427513,-55.206917,-83.23183,105.551056));
//		vList.add(new Voter(-12.898041,-59.985138,4.7418213,107.43605));
//		vList.add(new Voter(-68.889465,2.7265167,-87.48001,55.37617));
//		vList.add(new Voter(-46.776474,-76.86014,15.172211,8.068824));
//		vList.add(new Voter(35.49861,23.213638,-17.348373,184.27803));
//		vList.add(new Voter(24.2435,-40.99457,-55.2138,158.27205));
//		vList.add(new Voter(54.77397,-25.786957,-8.437141,19.30691));
//		vList.add(new Voter(0.22148895,29.337112,-15.985611,105.01514));
//		vList.add(new Voter(46.026825,-17.4216,37.122833,151.83998));
//		vList.add(new Voter(56.40541,90.26849,26.271294,45.441376));
//		vList.add(new Voter(66.66142,25.733376,-0.9550476,138.76933));
//		vList.add(new Voter(-0.29447174,26.046623,-91.14338,39.354897));
//		vList.add(new Voter(13.567505,96.80484,68.336395,170.0331));
//		vList.add(new Voter(89.28313,-92.85636,19.187103,64.140175));
//		vList.add(new Voter(68.596924,52.61989,79.8988,168.19423));
//		vList.add(new Voter(54.90239,54.855835,-59.904324,158.77548));
//		vList.add(new Voter(58.310394,97.13631,-24.760605,117.99742));
//		vList.add(new Voter(59.389557,-1.7394409,-59.057724,101.453316));
//		vList.add(new Voter(-98.22005,-72.71004,-66.61565,137.31198));
//		vList.add(new Voter(20.48861,24.440315,60.538513,144.42216));
//		vList.add(new Voter(42.302628,-26.092995,25.469612,95.59464));
//		vList.add(new Voter(-67.40186,69.17268,73.39613,90.01584));
//		vList.add(new Voter(-62.798405,-92.757454,72.11638,61.982643));
//		vList.add(new Voter(10.31929,-27.176498,-17.432663,33.437824));
//		vList.add(new Voter(-85.539154,44.871704,-87.41777,122.354675));
//		vList.add(new Voter(13.440132,34.969864,40.352142,20.719982));
//		vList.add(new Voter(-4.2396164,99.0728,-69.18916,143.17302));
//		vList.add(new Voter(6.9268494,-58.68118,62.406815,74.37625));
//		vList.add(new Voter(32.54857,31.50682,25.886444,79.64732));
//		vList.add(new Voter(59.687714,-92.223755,-28.70594,124.62374));
//		vList.add(new Voter(-94.89089,44.91101,63.032074,26.737));
//		vList.add(new Voter(-7.678917,89.05997,82.27449,150.6451));
//		vList.add(new Voter(-5.849777,-65.31122,-3.8267746,193.73529));
//		vList.add(new Voter(46.753784,-66.96031,27.146027,84.21741));
//		vList.add(new Voter(50.26381,-52.307926,-85.778534,146.65536));
//		vList.add(new Voter(69.62178,27.025948,1.1958694,157.135));
//		vList.add(new Voter(-41.327,-48.843765,30.615402,7.364762));
//		vList.add(new Voter(76.440155,78.51889,13.837837,184.20424));
//		vList.add(new Voter(-74.99367,-98.33809,-90.71083,24.391247));
//		vList.add(new Voter(95.05502,0.46694183,25.265099,165.19093));
//		vList.add(new Voter(92.40776,-77.83792,0.12135315,37.54991));
//		vList.add(new Voter(-25.435135,29.874603,59.456573,161.95158));
//		vList.add(new Voter(-58.888626,-55.473232,43.05017,47.01761));
//		vList.add(new Voter(-10.155426,-1.362648,-1.8670425,61.082066));
//		vList.add(new Voter(18.680313,55.721756,92.4236,167.20747));
//		vList.add(new Voter(-27.999626,96.77106,-19.233994,167.76851));
//		vList.add(new Voter(2.4297714,-2.34803,11.78566,96.773026));
//		vList.add(new Voter(-48.470497,-79.25787,-37.497066,193.12643));
//		vList.add(new Voter(5.124176,-86.136055,94.183426,68.297615));
//		vList.add(new Voter(-86.34652,83.39378,14.874863,95.166626));
//		vList.add(new Voter(0.85873413,10.716179,-25.788666,54.701744));
//		vList.add(new Voter(34.23935,-22.997162,-6.583,12.626696));
//		vList.add(new Voter(70.10634,-93.71004,15.393082,4.127395));
//		vList.add(new Voter(89.9185,27.290436,41.83525,191.2598));
//		vList.add(new Voter(41.230682,77.22748,80.133514,51.034664));
//		vList.add(new Voter(17.458046,-46.250473,54.11209,143.77303));
//		vList.add(new Voter(40.336945,-18.151878,19.356201,8.473253));
//		vList.add(new Voter(35.13481,-39.55966,73.95259,107.45941));
//		vList.add(new Voter(52.15175,-62.692406,-44.92537,184.96718));
//		vList.add(new Voter(-67.19216,21.444786,75.22867,167.66975));
//		vList.add(new Voter(41.69438,59.229263,71.52855,89.178314));
//		vList.add(new Voter(87.579926,96.45949,37.58815,0.62122345));
//		vList.add(new Voter(89.821304,-65.84976,-20.850883,86.490265));
//		vList.add(new Voter(68.38454,14.546112,-91.84742,55.64164));
//		vList.add(new Voter(-44.703007,-11.710297,-29.500435,153.88129));
//		vList.add(new Voter(-44.470345,97.846985,-76.76445,144.8002));
//		vList.add(new Voter(91.863525,-59.43972,48.4711,142.93106));
//		vList.add(new Voter(-79.82478,-37.887062,53.271515,36.97616));
//		vList.add(new Voter(20.852509,83.40794,74.3963,5.532825));
//		vList.add(new Voter(-16.08368,-72.82079,29.652374,163.76949));
//		vList.add(new Voter(88.20259,21.979523,-42.62496,62.85913));
//		vList.add(new Voter(10.089729,98.064606,-86.0728,136.25824));
//		vList.add(new Voter(19.316635,-79.718765,85.991165,5.3557277));
//		vList.add(new Voter(66.11627,36.15802,77.82831,44.459713));
//		vList.add(new Voter(-73.98749,52.40564,-10.269417,100.01477));
//		vList.add(new Voter(-59.862755,29.995361,-23.15538,65.453316));
//		vList.add(new Voter(-83.107956,-62.4316,-90.2057,50.905357));
//		vList.add(new Voter(-4.601761,96.419235,20.570885,141.4751));
//		vList.add(new Voter(15.772919,-50.38954,-42.367016,109.91545));
//		vList.add(new Voter(-97.72099,-4.547264,-30.18032,5.8954));
//		vList.add(new Voter(-97.6013,34.785095,44.4122,166.88629));
//		vList.add(new Voter(-99.43661,-73.99249,23.490166,32.84236));
//		vList.add(new Voter(55.462067,46.06369,-24.249779,61.79676));
//		vList.add(new Voter(-86.51135,-15.414322,97.44623,65.33599));
//		vList.add(new Voter(0.04736328,7.8576813,23.453651,56.381584));
//		vList.add(new Voter(60.308685,-84.575905,-56.836403,137.14877));
//		vList.add(new Voter(-60.081745,-38.031376,-90.391945,78.54415));
//		vList.add(new Voter(95.5513,-41.93158,-94.33592,45.21036));
//		vList.add(new Voter(89.64688,-86.25783,68.26436,10.150957));
//		vList.add(new Voter(40.84453,-92.846405,78.262344,52.22573));
//		vList.add(new Voter(-87.59891,-3.1842194,86.094406,127.27152));
//		vList.add(new Voter(-30.867317,39.20656,-24.091133,3.2773852));
//		vList.add(new Voter(16.276947,-94.48577,-34.22869,21.653961));
//		vList.add(new Voter(-48.701904,-67.4242,19.420158,25.53394));
//		vList.add(new Voter(65.38347,-94.139114,-95.53583,133.20312));
//		vList.add(new Voter(-18.350555,9.1315,99.64542,146.78912));
//		vList.add(new Voter(-78.54254,-70.66326,34.718292,5.4546356));
//		vList.add(new Voter(61.433548,60.169296,73.6264,16.406404));
//		vList.add(new Voter(-52.393948,-22.066483,36.12581,139.51491));
//		vList.add(new Voter(-61.52792,83.98949,34.06549,41.346443));
//		vList.add(new Voter(-22.154388,-75.28907,93.5739,66.66361));
//		vList.add(new Voter(76.220474,58.912598,-11.075989,60.30575));
//		vList.add(new Voter(84.42493,-19.017586,-48.509132,185.7916));
//		vList.add(new Voter(56.991592,3.0315628,-10.268471,170.59694));
//		vList.add(new Voter(-40.507843,19.417595,-6.607033,19.074177));
//		vList.add(new Voter(11.78154,30.789398,-44.80597,95.25186));
//		vList.add(new Voter(68.48418,-8.236,-37.8322,27.75569));
//		vList.add(new Voter(13.081108,-93.48933,50.947144,131.93138));
//		vList.add(new Voter(-70.31197,60.55435,-71.087036,199.64839));
//		vList.add(new Voter(67.250916,16.304054,-93.19223,60.57613));
//		vList.add(new Voter(-72.25569,-23.919914,16.78122,70.92478));
//		vList.add(new Voter(-0.5160446,-67.70793,-20.363747,3.3349633));
//		vList.add(new Voter(-21.567642,73.075455,-8.833458,77.009544));
//		vList.add(new Voter(-62.925304,26.913582,2.9279022,128.15878));
//		vList.add(new Voter(-72.102104,35.971252,-61.302017,140.85326));
//		vList.add(new Voter(65.65898,-89.91661,-96.48848,66.54955));
//		vList.add(new Voter(-8.446434,87.240295,74.89133,1.5972495));
//		vList.add(new Voter(58.28418,8.282349,11.239716,176.30518));
//		vList.add(new Voter(16.203712,90.272,43.9411,162.61479));
//		vList.add(new Voter(58.61487,-17.809341,39.31375,121.70325));
//		vList.add(new Voter(83.51437,26.376656,-95.98155,95.14133));
//		vList.add(new Voter(-62.726166,88.265884,-29.10614,66.41759));
//		vList.add(new Voter(-36.229443,4.9339676,-72.426895,72.18175));
//		vList.add(new Voter(-65.735596,29.70636,51.903183,78.56348));
//		vList.add(new Voter(-24.067757,-3.6345139,-11.479202,127.110825));
//		vList.add(new Voter(-49.385296,-86.4702,-39.558315,132.61874));
//		vList.add(new Voter(-86.67799,39.52339,56.82965,132.35785));
//		vList.add(new Voter(58.82997,33.03586,99.98422,159.56987));
//		vList.add(new Voter(53.846268,-31.747116,-24.097404,75.794426));
//		vList.add(new Voter(64.4348,-71.289635,46.544495,144.48312));
//		vList.add(new Voter(89.47342,-73.70062,59.285126,75.92027));
//		vList.add(new Voter(-30.168411,-54.331444,69.24466,99.80318));
//		vList.add(new Voter(81.76204,95.39574,-89.38893,121.66831));
//		vList.add(new Voter(-33.10231,-97.977295,-60.761906,53.032448));
//		vList.add(new Voter(78.5524,-51.72137,44.33101,148.62756));
//		vList.add(new Voter(-83.81128,-89.90017,-56.309307,179.04643));
//		vList.add(new Voter(11.505569,-43.452477,-35.348022,70.70807));
//		vList.add(new Voter(-41.68966,51.22307,-70.466324,80.15169));
//		vList.add(new Voter(-65.00613,32.693573,-53.751385,174.74944));
//		vList.add(new Voter(-53.03283,94.810165,-84.04096,171.09473));
//		vList.add(new Voter(-36.08259,66.290054,52.68985,55.30051));
//		vList.add(new Voter(-6.608307,-26.168655,-64.86367,161.5816));
//		vList.add(new Voter(21.341278,-73.75043,-72.84273,17.774761));
//		vList.add(new Voter(-31.697884,81.207596,87.38725,145.4697));
//		vList.add(new Voter(-83.58142,44.217896,-5.085579,10.411989));
//		vList.add(new Voter(-79.76687,35.520096,-69.937386,3.6442995));
//		vList.add(new Voter(-61.11518,-31.41214,-71.88074,58.954178));
//		vList.add(new Voter(38.028778,-20.560158,58.623703,106.69507));
//		vList.add(new Voter(78.47908,84.28125,-59.045635,72.669205));
//		vList.add(new Voter(10.482117,-79.423706,83.93822,63.857796));
//		vList.add(new Voter(-44.031715,30.360168,-93.31726,166.33325));
//		vList.add(new Voter(17.551743,-98.01769,-38.441658,106.28954));
//		vList.add(new Voter(-12.979294,15.693985,18.119682,100.00892));
//		vList.add(new Voter(-74.71988,98.34215,-13.242981,15.596188));
//		vList.add(new Voter(-9.004524,32.321518,-50.856136,76.93276));
//		vList.add(new Voter(-49.5155,73.90817,-66.64462,112.633095));
//		vList.add(new Voter(3.7850342,96.81268,17.253944,159.55273));
//		vList.add(new Voter(-88.513695,9.541023,-15.117073,106.95135));
//		vList.add(new Voter(57.167694,-88.15272,95.80943,164.73209));
//		vList.add(new Voter(-12.410019,-91.25308,83.36948,173.86319));
//		vList.add(new Voter(-53.301895,-66.606705,-20.522346,81.36328));
//		vList.add(new Voter(72.71803,26.395119,-95.92446,73.95253));
//		vList.add(new Voter(-74.01668,-46.71923,-32.458702,17.1121));
//		vList.add(new Voter(-72.446144,28.837418,53.726288,58.956944));
//		vList.add(new Voter(37.262817,-37.36869,-2.8960342,25.737906));
//		vList.add(new Voter(9.739601,90.44061,85.321045,118.30027));
//		vList.add(new Voter(16.530952,48.51773,-68.13628,92.413864));
//		vList.add(new Voter(93.121475,59.082,-75.65097,12.155592));
//		vList.add(new Voter(-3.9894104,-5.6080017,-7.9920197,61.69623));
//		vList.add(new Voter(-25.26976,-18.052948,-90.75052,109.77048));
//		vList.add(new Voter(-32.39276,-95.76611,-3.0850143,181.2692));
//		vList.add(new Voter(-87.87013,73.00751,63.211807,105.88754));
//		vList.add(new Voter(-31.95691,-48.963142,84.73102,4.317963));
//		ArrayList<Candidate> cList = new ArrayList<>();
//		cList.add(new Candidate(-66.03712,24.846855,34.919815,23.445404));
//		cList.add(new Candidate(-0.30943298,62.161682,71.52443,44.359493));
//		cList.add(new Candidate(22.965958,20.039871,-27.39849,127.346146));
//		cList.add(new Candidate(10.695801,-2.7476654,17.600822,8.586788));
//		cList.add(new Candidate(-16.575241,81.081314,28.753738,71.92739));
//		cList.add(new Candidate(23.802094,48.82277,79.696396,49.259056));
//		cList.add(new Candidate(-26.017586,-87.10176,32.169098,183.8785));
//		cList.add(new Candidate(-74.6457,-98.71254,-54.850662,67.39707));
//		cList.add(new Candidate(11.911156,-61.73048,-90.60017,42.69179));
//		cList.add(new Candidate(-95.71487,21.122185,67.78194,79.01906));
//		cList.add(new Candidate(36.402145,4.0149918,89.55179,62.341618));
//		cList.add(new Candidate(65.45459,-80.99376,-44.891106,11.379337));
//		cList.add(new Candidate(-43.876423,44.606018,-15.690994,0.7353544));
//		cList.add(new Candidate(-67.46567,-75.78939,92.61998,35.148598));
//		cList.add(new Candidate(-99.75711,29.887863,99.3472,27.582062));
//		cList.add(new Candidate(2.6988373,-57.838642,-66.73156,58.200825));
//		cList.add(new Candidate(42.303543,-5.106041,3.802742,166.67624));
//		cList.add(new Candidate(18.705727,28.021011,-71.07123,107.64892));
//		cList.add(new Candidate(72.793045,52.270523,61.220856,195.19537));
//		cList.add(new Candidate(-16.48233,-97.70474,35.47075,8.997404));
//		cList.add(new Candidate(58.933243,21.619652,-91.584816,30.46192));
//		cList.add(new Candidate(-41.56096,-41.1142,84.22923,34.757042));
//		cList.add(new Candidate(49.170044,75.1077,-42.07176,63.72154));
//		cList.add(new Candidate(-42.189766,71.67493,80.03206,39.593124));
//		cList.add(new Candidate(-44.965565,-5.0251465,95.290405,10.841274));
//		cList.add(new Candidate(-18.376541,-7.3592453,59.581238,25.05524));
//		cList.add(new Candidate(-25.507545,66.121216,44.032623,41.43275));
//		cList.add(new Candidate(11.9935,-47.333336,23.865334,84.16354));
//		cList.add(new Candidate(-91.40338,85.73309,-20.58387,20.757092));
//		cList.add(new Candidate(40.238068,25.622177,44.414062,64.60237));
//		ArrayList<Party> pList = new ArrayList<>();
//		pList.add(new Party(-32.80287,61.95317,86.099976));
//		pList.add(new Party(-47.13025,88.39169,96.956955));
//		pList.add(new Party(-64.41169,-41.000748,59.66594));
//		pList.add(new Party(94.88628,75.47516,48.81523));
//		pList.add(new Party(-57.70167,89.963135,83.73245));
		
		//Curated test case used for examples in document
		ArrayList<Voter> vList = new ArrayList<>();
		vList.add(new Voter(10.008430480957031,53.9774169921875,81.30192565917969,140.21940231323242));
		vList.add(new Voter(-39.075374603271484,-28.373870849609375,7.699714660644531,69.963523864746094));
		vList.add(new Voter(-32.23442077636719,-94.32379913330078,34.3656005859375,96.63156509399414));
		vList.add(new Voter(-75.59231567382812,-21.252883911132812,-49.73037338256836,199.0031280517578));
		vList.add(new Voter(32.68479919433594,57.131011962890625,94.104248046875,129.75787353515625));
		vList.add(new Voter(65.99031066894531,-67.56822204589844,58.46446228027344,122.99040222167969));
		vList.add(new Voter(11.565826416015625,-10.656082153320312,-81.2809829711914,143.52864837646484));
		vList.add(new Voter(-84.93510437011719,-47.89512252807617,-60.6527099609375,131.130855560302734));
		vList.add(new Voter(-96.98927307128906,-75.252685546875,49.37120056152344,129.56927490234375));
		vList.add(new Voter(-67.05673217773438,-46.01408386230469,-42.98460388183594,177.50885009765625));
		vList.add(new Voter(8.170257568359375,-9.383735656738281,-47.63501739501953,128.43565368652344));
		vList.add(new Voter(-25.241867065429688,-51.21730422973633,-17.30889129638672,85.05293273925781));
		vList.add(new Voter(47.29203796386719,-46.447349548339844,94.04318237304688,82.493751525878906));
		vList.add(new Voter(-8.864654541015625,7.791175842285156,-75.41136932373047,146.9752082824707));
		vList.add(new Voter(12.967147827148438,67.84074401855469,-18.94202423095703,99.547460556030273));
		vList.add(new Voter(34.84588623046875,82.02569580078125,-29.43244171142578,173.40045166015625));
		vList.add(new Voter(86.94776916503906,-85.34169006347656,90.69242858886719,158.52659606933594));
		vList.add(new Voter(-69.03831481933594,-4.025520324707031,19.931373596191406,108.88044738769531));
		vList.add(new Voter(38.91502380371094,-37.46461868286133,83.70968627929688,128.0684814453125));
		vList.add(new Voter(-15.351699829101562,-62.8631591796875,94.99258422851562,97.88291549682617));
		vList.add(new Voter(-28.407440185546875,-4.325843811035156,-99.46460723876953,157.10115051269531));
		vList.add(new Voter(-26.582550048828125,50.161773681640625,-62.036468505859375,126.58500671386719));
		vList.add(new Voter(-80.86502075195312,-85.96687316894531,16.06829071044922,121.15670394897461));
		vList.add(new Voter(31.912918090820312,-5.8094635009765625,-65.24784851074219,111.336016654968262));
		vList.add(new Voter(60.15415954589844,32.20262145996094,-96.43268585205078,125.70171356201172));
		vList.add(new Voter(76.09440612792969,68.33206176757812,73.19303894042969,167.25314331054688));
		vList.add(new Voter(-89.05079650878906,-80.65119934082031,68.41403198242188,119.97537231445312));
		vList.add(new Voter(30.134536743164062,-97.62065124511719,-57.67863845825195,133.412620544433594));
		vList.add(new Voter(85.94612121582031,57.74993896484375,41.617706298828125,88.457366943359375));
		vList.add(new Voter(-45.856571197509766,93.60133361816406,-13.673309326171875,193.49063110351562));
		vList.add(new Voter(-44.66035461425781,15.376754760742188,-43.98417663574219,157.2303466796875));
		vList.add(new Voter(52.37872314453125,-6.819892883300781,30.448959350585938,146.01242065429688));
		vList.add(new Voter(49.965179443359375,75.39398193359375,25.12940216064453,120.693052291870117));
		vList.add(new Voter(76.55119323730469,14.724456787109375,0.4908294677734375,102.912925720214844));
		vList.add(new Voter(90.16731262207031,-25.950363159179688,58.61378479003906,128.51580810546875));
		vList.add(new Voter(35.65771484375,-88.83737182617188,33.738128662109375,169.957275390625));
		vList.add(new Voter(-37.523197174072266,67.64346313476562,4.282142639160156,121.79383850097656));
		vList.add(new Voter(-46.70866775512695,-64.36703491210938,-69.24542236328125,193.09478759765625));
		vList.add(new Voter(65.09738159179688,-18.23564910888672,6.5575714111328125,134.13772583007812));
		vList.add(new Voter(-65.00894165039062,12.300315856933594,-78.88359832763672,168.11674499511719));
		vList.add(new Voter(-16.833984375,-82.65834045410156,16.348098754882812,180.6059112548828));
		vList.add(new Voter(-64.83456420898438,93.26234436035156,46.7821044921875,181.91159057617188));
		vList.add(new Voter(79.70722961425781,-18.486404418945312,24.27991485595703,194.8800048828125));
		vList.add(new Voter(58.06443786621094,-59.711204528808594,93.21853637695312,148.107086181640625));
		vList.add(new Voter(67.20677185058594,-5.969917297363281,-88.3800048828125,116.72746658325195));
		vList.add(new Voter(-85.83185577392578,21.531715393066406,-22.13495635986328,122.47357177734375));
		vList.add(new Voter(-66.8379898071289,-22.1864013671875,-8.325386047363281,115.24666595458984));
		vList.add(new Voter(30.77679443359375,-39.95258712768555,-64.34648132324219,129.9763641357422));
		vList.add(new Voter(51.23658752441406,-13.349594116210938,89.25588989257812,96.52998352050781));
		vList.add(new Voter(-42.47115707397461,-81.6599349975586,23.109420776367188,144.62234497070312));
		vList.add(new Voter(33.77577209472656,-72.0879898071289,47.916961669921875,84.8381576538086));
		vList.add(new Voter(96.07460021972656,-56.25187301635742,-92.88964080810547,154.8654022216797));
		vList.add(new Voter(29.19146728515625,-25.30419921875,-61.457252502441406,121.55380249023438));
		vList.add(new Voter(28.640823364257812,54.94944763183594,-35.94182586669922,89.30302047729492));
		vList.add(new Voter(-5.53216552734375,69.2694091796875,-14.494583129882812,109.229021072387695));
		vList.add(new Voter(-41.22576904296875,4.136909484863281,91.26277160644531,128.17437744140625));
		vList.add(new Voter(20.966567993164062,-80.7567367553711,-10.262069702148438,117.928657531738281));
		vList.add(new Voter(9.572624206542969,61.99650573730469,46.410125732421875,140.13249969482422));
		vList.add(new Voter(65.46435546875,36.04261779785156,70.63507080078125,92.490516662597656));
		vList.add(new Voter(-47.15644073486328,38.06672668457031,76.67868041992188,152.41693115234375));
		vList.add(new Voter(71.30580139160156,2.1460037231445312,-36.003173828125,174.45533752441406));
		vList.add(new Voter(80.68937683105469,17.383148193359375,-58.74304962158203,170.75779724121094));
		vList.add(new Voter(-16.994583129882812,52.72369384765625,69.16084289550781,80.4036636352539));
		vList.add(new Voter(92.55569458007812,-96.10797119140625,14.145240783691406,114.07951354980469));
		vList.add(new Voter(28.41473388671875,-97.80976867675781,-64.41474151611328,117.111888885498047));
		vList.add(new Voter(9.672630310058594,40.69300842285156,-12.009963989257812,118.50862121582031));
		vList.add(new Voter(6.055427551269531,84.44758605957031,-62.729000091552734,134.09127807617188));
		vList.add(new Voter(76.39256286621094,63.253387451171875,39.89208984375,119.69351959228516));
		vList.add(new Voter(23.147056579589844,64.05607604980469,32.57305908203125,86.010942459106445));
		vList.add(new Voter(-64.32026672363281,23.55590057373047,-7.420768737792969,176.19053649902344));
		vList.add(new Voter(-80.24290466308594,86.97517395019531,-92.94982147216797,161.38973999023438));
		vList.add(new Voter(-20.80010986328125,-46.46076965332031,-90.37744903564453,130.49400520324707));
		vList.add(new Voter(52.97404479980469,-72.66763305664062,-86.93051147460938,182.83314514160156));
		vList.add(new Voter(96.99034118652344,-30.76665496826172,-20.625350952148438,124.96669006347656));
		vList.add(new Voter(74.9000244140625,48.043365478515625,94.27127075195312,106.15081787109375));
		vList.add(new Voter(-37.09609603881836,49.56462097167969,-54.405235290527344,122.71783447265625));
		vList.add(new Voter(38.96800231933594,64.98529052734375,90.69442749023438,123.04246520996094));
		vList.add(new Voter(84.5615234375,75.32450866699219,54.668670654296875,105.75927734375));
		vList.add(new Voter(26.38225555419922,41.50285339355469,-41.60988235473633,142.548491954803467));
		vList.add(new Voter(-38.38372039794922,25.40203094482422,-30.487014770507812,142.07669448852539));
		vList.add(new Voter(71.85833740234375,98.22750854492188,59.69078063964844,150.516475677490234));
		vList.add(new Voter(-61.509490966796875,-63.52131271362305,12.177421569824219,125.172161102294922));
		vList.add(new Voter(95.35508728027344,-89.06887817382812,1.5371780395507812,172.58901977539062));
		vList.add(new Voter(26.0992431640625,-71.14256286621094,-43.706607818603516,152.9737548828125));
		vList.add(new Voter(-7.600639343261719,-3.472808837890625,-53.697731018066406,121.8819580078125));
		vList.add(new Voter(54.34568786621094,-35.92662811279297,40.48274230957031,153.844261169433594));
		vList.add(new Voter(85.10366821289062,50.34727478027344,-24.48382568359375,154.42784881591797));
		vList.add(new Voter(1.39617919921875,63.20355224609375,95.36712646484375,150.65119171142578));
		vList.add(new Voter(72.2923583984375,-76.63325500488281,70.74539184570312,190.57908630371094));
		vList.add(new Voter(95.16746520996094,-88.90837097167969,79.16802978515625,123.56431579589844));
		vList.add(new Voter(78.40884399414062,51.05729675292969,89.77674865722656,107.26599884033203));
		vList.add(new Voter(61.7801513671875,-93.9836654663086,10.199867248535156,134.5146484375));
		vList.add(new Voter(-21.637657165527344,-83.49766540527344,75.64778137207031,171.38703918457031));
		vList.add(new Voter(85.00279235839844,71.89466857910156,96.92396545410156,175.88768005371094));
		vList.add(new Voter(-10.960372924804688,-32.375083923339844,46.50172424316406,136.8707275390625));
		vList.add(new Voter(27.946067810058594,13.277961730957031,-5.967987060546875,169.47674560546875));
		vList.add(new Voter(26.198257446289062,-5.8197479248046875,-88.83799743652344,158.65138244628906));
		vList.add(new Voter(-89.94066619873047,-57.52651596069336,-10.917709350585938,156.23716735839844));
		vList.add(new Voter(84.17532348632812,-89.023681640625,-7.802055358886719,186.82969665527344));
		vList.add(new Voter(33.58058166503906,-53.166259765625,-36.72372055053711,132.1437530517578));
		vList.add(new Voter(96.6290283203125,-37.545204162597656,-80.01127624511719,199.86726379394531));
		vList.add(new Voter(77.67657470703125,-80.50718688964844,85.12710571289062,171.92630004882812));
		vList.add(new Voter(73.39352416992188,-75.06452941894531,-71.0200424194336,199.2046356201172));
		vList.add(new Voter(61.99067687988281,-53.632450103759766,-37.72450637817383,110.639892578125));
		vList.add(new Voter(-1.7383346557617188,98.95187377929688,-48.58694076538086,97.61019897460938));
		vList.add(new Voter(95.41952514648438,20.607887268066406,60.525848388671875,131.728665828704834));
		vList.add(new Voter(-27.029502868652344,-42.86110305786133,60.618133544921875,80.47932434082031));
		vList.add(new Voter(-88.58889770507812,2.587066650390625,-65.72015380859375,196.5339126586914));
		vList.add(new Voter(60.43202209472656,76.3668212890625,21.77081298828125,128.234195709228516));
		vList.add(new Voter(70.06449890136719,-91.89987182617188,-74.09776306152344,159.42681121826172));
		vList.add(new Voter(-54.793296813964844,91.09162902832031,-92.87897491455078,164.7125244140625));
		vList.add(new Voter(16.190025329589844,-85.77677917480469,44.327239990234375,113.180458068847656));
		vList.add(new Voter(29.683029174804688,56.44377136230469,85.26640319824219,156.779052734375));
		vList.add(new Voter(-7.538307189941406,35.1148681640625,-96.54855346679688,134.31768798828125));
		vList.add(new Voter(-31.929779052734375,-53.12168502807617,-72.00940704345703,124.89888763427734));
		vList.add(new Voter(40.960296630859375,99.1336669921875,-90.7479019165039,115.9493408203125));
		vList.add(new Voter(34.201507568359375,78.11918640136719,-63.93280029296875,109.93412780761719));
		vList.add(new Voter(5.001411437988281,42.74763488769531,-67.31300354003906,127.252025604248047));
		vList.add(new Voter(42.672149658203125,-76.3304443359375,-72.1456527709961,162.07522583007812));
		vList.add(new Voter(-8.313056945800781,-67.41290283203125,33.05128479003906,175.98516845703125));
		vList.add(new Voter(27.364967346191406,-67.08419799804688,21.505203247070312,93.70894622802734));
		vList.add(new Voter(-4.939796447753906,-46.11034393310547,15.528976440429688,126.225460052490234));
		vList.add(new Voter(36.4390869140625,35.40483093261719,-28.938331604003906,168.03439331054688));
		vList.add(new Voter(88.85858154296875,23.595870971679688,-50.81333923339844,106.89929962158203));
		vList.add(new Voter(-20.140670776367188,56.80717468261719,40.7022705078125,101.20775604248047));
		vList.add(new Voter(38.415771484375,54.79866027832031,-78.20301055908203,94.49647521972656));
		vList.add(new Voter(37.33766174316406,39.201385498046875,62.037689208984375,188.3633270263672));
		vList.add(new Voter(23.649009704589844,-30.86431121826172,52.15763854980469,141.49244689941406));
		vList.add(new Voter(40.78678894042969,99.17919921875,-30.286087036132812,196.46180725097656));
		vList.add(new Voter(60.45082092285156,34.80401611328125,1.8122940063476562,81.88563537597656));
		vList.add(new Voter(31.041091918945312,29.396987915039062,79.94796752929688,98.385961532592773));
		vList.add(new Voter(23.04930877685547,-48.673152923583984,-36.216129302978516,109.73565673828125));
		vList.add(new Voter(-79.70701599121094,26.35865020751953,-27.24524688720703,100.972137451171875));
		vList.add(new Voter(-92.97137451171875,5.671546936035156,-61.480438232421875,185.857421875));
		vList.add(new Voter(-4.751953125,75.88058471679688,5.938133239746094,114.956867218017578));
		vList.add(new Voter(86.98614501953125,-18.103408813476562,-49.940826416015625,111.12100219726562));
		vList.add(new Voter(43.560638427734375,-5.839241027832031,92.62632751464844,70.60468292236328));
		vList.add(new Voter(-16.46399688720703,-40.1270751953125,-42.71746826171875,101.89372253417969));
		vList.add(new Voter(49.14129638671875,90.63157653808594,-7.602561950683594,85.28752136230469));
		vList.add(new Voter(-46.80290222167969,88.95408630371094,2.628662109375,99.107383728027344));
		vList.add(new Voter(67.14961242675781,-76.05596923828125,9.913215637207031,120.9485855102539));
		vList.add(new Voter(-22.528030395507812,-90.95024108886719,36.25300598144531,87.69279479980469));
		vList.add(new Voter(49.87953186035156,75.04826354980469,71.23062133789062,125.25087547302246));
		vList.add(new Voter(38.864959716796875,-6.6673126220703125,24.682510375976562,133.14369201660156));
		vList.add(new Voter(-62.44898986816406,-57.742645263671875,49.476593017578125,164.83615112304688));
		vList.add(new Voter(-8.065811157226562,-0.07073974609375,22.449913024902344,180.08914184570312));
		vList.add(new Voter(-86.70387268066406,40.86097717285156,-52.69557189941406,151.9241943359375));
		vList.add(new Voter(78.53884887695312,-38.034584045410156,-27.02880096435547,106.41741180419922));
		vList.add(new Voter(-60.77846145629883,-77.8934326171875,35.54139709472656,169.69296264648438));
		vList.add(new Voter(95.49940490722656,86.52229309082031,-89.06873321533203,125.029541015625));
		vList.add(new Voter(64.51132202148438,32.96153259277344,-61.12881851196289,83.80902099609375));
		vList.add(new Voter(-36.09178161621094,-28.266944885253906,27.01689910888672,140.24192810058594));
		vList.add(new Voter(24.616226196289062,71.10433959960938,-13.422286987304688,111.01841735839844));
		vList.add(new Voter(-77.65116882324219,-77.78446960449219,-84.15542602539062,145.82109832763672));
		vList.add(new Voter(-5.13848876953125,-77.10490417480469,59.84051513671875,113.638067245483398));
		vList.add(new Voter(35.45497131347656,8.055099487304688,95.33811950683594,98.64126586914062));
		vList.add(new Voter(-75.36325073242188,69.2705078125,-54.1280632019043,147.78433227539062));
		vList.add(new Voter(-53.22886657714844,11.174461364746094,4.833641052246094,93.967493057250977));
		vList.add(new Voter(86.48904418945312,-25.875564575195312,-22.507904052734375,195.8426055908203));
		vList.add(new Voter(5.95587158203125,-50.77928161621094,-1.48114013671875,83.22461700439453));
		vList.add(new Voter(-64.87450408935547,-10.914741516113281,59.832977294921875,80.29499053955078));
		vList.add(new Voter(41.627044677734375,92.46676635742188,54.215423583984375,162.74366760253906));
		vList.add(new Voter(-10.128143310546875,-65.47613525390625,49.01133728027344,122.67254638671875));
		vList.add(new Voter(-77.38705444335938,-6.29376220703125,27.17005157470703,159.591270446777344));
		vList.add(new Voter(93.46275329589844,-18.75635528564453,94.29911804199219,97.59437561035156));
		vList.add(new Voter(-42.022396087646484,50.652008056640625,90.70236206054688,164.65415954589844));
		vList.add(new Voter(96.6773681640625,19.654739379882812,61.69012451171875,92.56678771972656));
		vList.add(new Voter(-39.74134826660156,-63.035057067871094,26.783355712890625,198.67669677734375));
		vList.add(new Voter(48.47929382324219,-44.60935592651367,1.0940322875976562,198.04226684570312));
		vList.add(new Voter(-28.63519287109375,-21.243980407714844,-85.90066528320312,130.45159912109375));
		vList.add(new Voter(-65.66971588134766,14.690277099609375,49.46087646484375,192.2451934814453));
		vList.add(new Voter(-71.34506225585938,-13.526260375976562,-81.75779724121094,177.0107879638672));
		vList.add(new Voter(-72.63691711425781,-30.42888641357422,-61.312984466552734,171.2505645751953));
		vList.add(new Voter(56.45143127441406,59.27622985839844,66.12974548339844,90.7357177734375));
		vList.add(new Voter(98.0115966796875,95.07231140136719,-31.308792114257812,135.20600891113281));
		vList.add(new Voter(10.71661376953125,21.772781372070312,-75.16017150878906,139.17323303222656));
		vList.add(new Voter(-43.11772537231445,-99.09187316894531,-81.21762084960938,167.06981658935547));
		vList.add(new Voter(20.148040771484375,-1.96466064453125,-77.45953369140625,184.749755859375));
		vList.add(new Voter(8.640716552734375,-71.91421508789062,18.756057739257812,188.1169891357422));
		vList.add(new Voter(20.30341339111328,15.476951599121094,43.054779052734375,178.73036193847656));
		vList.add(new Voter(-39.07078552246094,18.777320861816406,97.50128173828125,88.83561706542969));
		vList.add(new Voter(-31.084213256835938,91.50910949707031,42.62054443359375,92.51397705078125));
		vList.add(new Voter(13.525787353515625,77.18133544921875,-26.67316436767578,154.04803466796875));
		vList.add(new Voter(-67.64168548583984,-90.50277709960938,-9.83685302734375,187.44285583496094));
		vList.add(new Voter(90.38462829589844,-14.409172058105469,92.56460571289062,172.61285400390625));
		vList.add(new Voter(92.81895446777344,86.20903015136719,54.47065734863281,186.22515869140625));
		vList.add(new Voter(-60.21000289916992,-8.468925476074219,68.32917785644531,84.32653045654297));
		vList.add(new Voter(-67.91067504882812,7.3514251708984375,-51.00139236450195,153.8680877685547));
		vList.add(new Voter(-51.548240661621094,-59.22862243652344,11.594619750976562,138.08111572265625));
		vList.add(new Voter(43.64093017578125,-83.09272766113281,37.63018798828125,136.25238037109375));
		vList.add(new Voter(-78.80386352539062,-53.72868728637695,-61.436378479003906,133.0553221702575684));
		vList.add(new Voter(37.55952453613281,-78.571533203125,73.49827575683594,96.432604789733887));
		vList.add(new Voter(-63.05628967285156,76.14616394042969,-48.71091842651367,188.73805236816406));
		vList.add(new Voter(91.70234680175781,-57.66123580932617,-73.75589752197266,164.88894653320312));
		vList.add(new Voter(-83.64183807373047,-84.3380126953125,-45.382225036621094,139.652645111083984));
		vList.add(new Voter(41.32769775390625,-14.548110961914062,25.135948181152344,116.809093475341797));
		vList.add(new Voter(1.9920120239257812,87.53555297851562,-37.71253967285156,152.86629104614258));
		vList.add(new Voter(-56.38336944580078,5.707611083984375,27.1845703125,153.2140007019043));
		vList.add(new Voter(27.541053771972656,13.878318786621094,-98.49539947509766,136.94124221801758));
		vList.add(new Voter(-18.967010498046875,-94.48442077636719,-5.160392761230469,194.1370086669922));
		ArrayList<Candidate> cList = new ArrayList<>();
		cList.add(new Candidate(67.38932800292969,65.1346435546875,-2.1708602905273438,2.0));
		cList.add(new Candidate(1.0445556640625,-46.565067291259766,32.83610534667969,2.0));
		cList.add(new Candidate(52.15037536621094,25.171722412109375,77.02520751953125,2.0));
		cList.add(new Candidate(72.15449523925781,7.129096984863281,93.51123046875,2.0));
		cList.add(new Candidate(-6.974967956542969,24.60993194580078,33.34979248046875,2.0));
		ArrayList<Party> pList = new ArrayList<>();
		pList.add(new Party(-990.0,-990.0,-990.0));
		
		ArrayList<Candidate> winners = new ArrayList<>();
		FirstPastThePost election1 = new FirstPastThePost(vList, cList, pList);
		FlatApproval election2 = new FlatApproval(vList, cList, pList);
		Bucklin election3 = new Bucklin(vList, cList, pList);
		InstantRunoff election4 = new InstantRunoff(vList, cList, pList);
		
		RepScore repScore1 = new RepScore(election1);
		RepScore repScore2 = new RepScore(election2);
		RepScore repScore3 = new RepScore(election3);
		RepScore repScore4 = new RepScore(election4);
		
		CondTest condTest1 = new CondTest(election1);
		CondTest condTest2 = new CondTest(election2);
		CondTest condTest3 = new CondTest(election3);
		CondTest condTest4 = new CondTest(election4);
		
		IndepOfAlts indep1 = new IndepOfAlts(election1);
		IndepOfAlts indep2 = new IndepOfAlts(election2);
		IndepOfAlts indep3 = new IndepOfAlts(election3);
		IndepOfAlts indep4 = new IndepOfAlts(election4);
		
		LaterNoHelpHarm lnhh1 = new LaterNoHelpHarm(election1);
		LaterNoHelpHarm lnhh2 = new LaterNoHelpHarm(election2);
		LaterNoHelpHarm lnhh3 = new LaterNoHelpHarm(election3);
		LaterNoHelpHarm lnhh4 = new LaterNoHelpHarm(election4);

		System.out.println("Start");
		System.out.println();
		System.out.println(election1);
		winners.add(election1.makeElection(false));
		for (Candidate nc: election1.getCandList()) {
			System.out.println(nc);
		}
		System.out.println();
		System.out.println(election2);
		winners.add(election2.makeElection(false));
		for (Candidate nc: election2.getCandList()) {
			System.out.println(nc);
		}
		System.out.println();
		System.out.println(election3);
		winners.add(election3.makeElection(false));
		for (Candidate nc: election3.getCandList()) {
			System.out.println(nc);
		}
		System.out.println();
		System.out.println(election4);
		winners.add(election4.makeElection(false));
		for (Candidate nc: election4.getCandList()) {
			System.out.println(nc);
		}
		System.out.println();
		for (Candidate w: winners) {
			System.out.println(w);
		}
//		winners.add(null);
//		winners.add(null);
		System.out.println();
		repScore1.makeMeasure();
		repScore2.makeMeasure();
		repScore3.makeMeasure();
		repScore4.makeMeasure();
		System.out.println();
		condTest1.makeMeasure();
		condTest2.makeMeasure();
		condTest3.makeMeasure();
		condTest4.makeMeasure();
		System.out.println();
		indep1.makeMeasure();
		indep2.makeMeasure();
		indep3.makeMeasure();
		indep4.makeMeasure();
		System.out.println();
		lnhh1.makeMeasure();
		lnhh2.makeMeasure();
		lnhh3.makeMeasure();
		lnhh4.makeMeasure();
//		System.out.println();
//		election1.resetElection();
//		System.out.println();
//		election2.resetElection();
//		System.out.println();
//		election3.resetElection();
//		System.out.println();
//		election4.resetElection();
//		System.out.println();
//		
//		winners.add(election1.makeElection(false));
//		election1.resetElection();
//		winners.add(election1.makeElection(false));
//		election1.resetElection();
//		winners.add(election1.makeElection(false));
//		election1.resetElection();
//		winners.add(election1.makeElection(false));
//		election1.resetElection();
//		winners.add(election1.makeElection(false));
//		election1.resetElection();
//		winners.add(election1.makeElection(false));
//		election1.resetElection();
//		winners.add(election1.makeElection(false));
//		election1.resetElection();
//		winners.add(election1.makeElection(false));
//		election1.resetElection();
//		winners.add(election1.makeElection(false));
//		winners.add(null);
//		winners.add(election2.makeElection(false));
//		election2.resetElection();
//		winners.add(election2.makeElection(false));
//		election2.resetElection();
//		winners.add(election2.makeElection(false));
//		election2.resetElection();
//		winners.add(election2.makeElection(false));
//		election2.resetElection();
//		winners.add(election2.makeElection(false));
//		election2.resetElection();
//		winners.add(election2.makeElection(false));
//		election2.resetElection();
//		winners.add(election2.makeElection(false));
//		election2.resetElection();
//		winners.add(election2.makeElection(false));
//		election2.resetElection();
//		winners.add(election2.makeElection(false));
//		winners.add(null);
//		winners.add(election3.makeElection(false));
//		election3.resetElection();
//		winners.add(election3.makeElection(false));
//		election3.resetElection();
//		winners.add(election3.makeElection(false));
//		election3.resetElection();
//		winners.add(election3.makeElection(false));
//		election3.resetElection();
//		winners.add(election3.makeElection(false));
//		election3.resetElection();
//		winners.add(election3.makeElection(false));
//		election3.resetElection();
//		winners.add(election3.makeElection(false));
//		election3.resetElection();
//		winners.add(election3.makeElection(false));
//		election3.resetElection();
//		winners.add(election3.makeElection(false));
//		winners.add(null);
//		winners.add(election4.makeElection(false));
//		election4.resetElection();
//		winners.add(election4.makeElection(false));
//		election4.resetElection();
//		winners.add(election4.makeElection(false));
//		election4.resetElection();
//		winners.add(election4.makeElection(false));
//		election4.resetElection();
//		winners.add(election4.makeElection(false));
//		election4.resetElection();
//		winners.add(election4.makeElection(false));
//		election4.resetElection();
//		winners.add(election4.makeElection(false));
//		election4.resetElection();
//		winners.add(election4.makeElection(false));
//		election4.resetElection();
//		winners.add(election4.makeElection(false));
//		System.out.println();
//		System.out.println();
//		for (Candidate w: winners) {
//			System.out.println(w);
//		}
//		System.out.println();
//		System.out.println();
//		repScore1.makeMeasure();
//		repScore2.makeMeasure();
//		repScore3.makeMeasure();
//		repScore4.makeMeasure();
//		System.out.println();
//		condTest1.makeMeasure();
//		condTest2.makeMeasure();
//		condTest3.makeMeasure();
//		condTest4.makeMeasure();
//		System.out.println();
//		indep1.makeMeasure();
//		indep2.makeMeasure();
//		indep3.makeMeasure();
//		indep4.makeMeasure();
//		System.out.println();
//		lnhh1.makeMeasure();
//		lnhh2.makeMeasure();
//		lnhh3.makeMeasure();
//		lnhh4.makeMeasure();
//		System.out.println();
//		election1.resetElection();
//		System.out.println();
//		election2.resetElection();
//		System.out.println();
//		election3.resetElection();
//		System.out.println();
//		election4.resetElection();
//		System.out.println();
	}
	
	//list generating methods
	public static ArrayList<Voter> makeVoterList(int n) {
		ArrayList<Voter> list = new ArrayList<>();
		for (int j=0; j<n; j++) {
			list.add(new Voter());
		}
		return list;	
	}
	public static ArrayList<Candidate> makeCandList(int n) {
		ArrayList<Candidate> list = new ArrayList<>();
		ArrayList<Candidate> rList = new ArrayList<>();
		boolean dupes=true;		
		for (int j=0; j<n; j++) {
			list.add(new Candidate());
		}
		while (dupes) {//checks for Candidates that are too similar, if two Candidates are less than 1 unit length away from each other, one of them is removed and replaced by a new random Candidate
			dupes = false;
			for (Candidate c1: list) {
				for (Candidate c2: list) {
					if (!c1.equals(c2) && c1.dNorm(c2) < 1) {
						rList.add(c2);
						dupes = true;
					}
				}
			}
			if (!rList.isEmpty()) {
				for (Candidate r: rList) {
					list.remove(r);
					list.add(new Candidate());
				}
			}
		}
		return list;	
	}
	public static ArrayList<Party> makePartyList(int n) {
		ArrayList<Party> list = new ArrayList<>();
		ArrayList<Party> rList = new ArrayList<>();
		boolean dupes=true;		
		for (int j=0; j<n; j++) {
			list.add(new Party());
		}
		while (dupes) {//checks for Parties that are too similar, if two Parties are less than 10 unit lengths away from each other, one of them is removed and replaced by a new random Party
			dupes = false;
			for (Party p1: list) {
				for (Party p2: list) {
					if (!p1.equals(p2) && p1.dNorm(p2) < 1) {
						rList.add(p2);
						dupes = true;
					}
				}
			}
			if (!rList.isEmpty()) {
				for (Party r: rList) {
					list.remove(r);
					list.add(new Party());
				}
			}
		}
		return list;	
	}
	
}
