package thesis;

import java.util.ArrayList;
import thesis.model.*;

public class Main {

	public static void main(String[] args) {
		
		ArrayList<Voter> vList = new ArrayList<>();
		vList.add(new Voter(48.442047,-74.91875,56.00299,81.76355));
		vList.add(new Voter(5.0317535,65.82732,7.551918,31.049204));
		vList.add(new Voter(18.001022,67.68257,-66.71231,47.58431));
		vList.add(new Voter(37.22728,-44.71581,-91.70805,41.1589));
		vList.add(new Voter(-32.83715,-52.89346,33.51355,129.96039));
		vList.add(new Voter(20.831642,59.47682,-43.31795,13.711775));
		vList.add(new Voter(-53.742218,25.536789,43.368988,121.71));
		vList.add(new Voter(65.14644,-82.72421,-81.11267,190.13509));
		vList.add(new Voter(64.223785,67.63316,65.27632,167.4743));
		vList.add(new Voter(-41.828705,12.956154,36.324936,111.36263));
		vList.add(new Voter(-6.4941025,53.8441,-88.301445,128.68243));
		vList.add(new Voter(-67.86966,95.273605,91.136566,143.11739));
		vList.add(new Voter(91.804565,-53.828037,-98.11344,135.8709));
		vList.add(new Voter(31.788147,-3.7987823,-94.328476,196.91353));
		vList.add(new Voter(-38.178467,45.97293,-77.69735,112.518776));
		vList.add(new Voter(-18.979706,-60.603558,90.43945,182.20863));
		vList.add(new Voter(-17.152534,67.161316,44.9653,52.411842));
		vList.add(new Voter(-91.07622,2.8821259,66.12482,38.61364));
		vList.add(new Voter(16.980377,63.228226,-62.782906,111.64986));
		vList.add(new Voter(18.823364,6.0889816,-97.36184,91.794586));
		vList.add(new Voter(-82.0403,-7.22731,41.92581,136.76329));
		vList.add(new Voter(61.84938,28.321594,-58.188545,152.67656));
		vList.add(new Voter(52.04579,-14.216927,58.886734,92.00689));
		vList.add(new Voter(-88.66617,33.873505,-99.77163,36.78737));
		vList.add(new Voter(-21.929848,81.695145,16.201439,171.74965));
		vList.add(new Voter(25.091019,78.43147,-15.187416,19.05421));
		vList.add(new Voter(-72.27302,-49.70734,-15.333046,187.98146));
		vList.add(new Voter(-70.28004,-97.92722,96.18021,159.09402));
		vList.add(new Voter(-22.628212,77.80513,58.716125,108.30915));
		vList.add(new Voter(64.38577,-23.92646,43.395355,33.014072));
		vList.add(new Voter(9.038422,-96.90352,4.208542,186.41553));
		vList.add(new Voter(-18.892563,63.910324,48.650436,189.96638));
		vList.add(new Voter(-78.9191,22.627731,-43.621136,174.80713));
		vList.add(new Voter(14.400192,81.25087,81.52597,15.175843));
		vList.add(new Voter(67.79181,47.915237,-59.492935,38.77733));
		vList.add(new Voter(-94.809494,95.39447,-70.13312,25.888597));
		vList.add(new Voter(-17.455421,-4.5042267,-16.61663,0.86369514));
		vList.add(new Voter(92.24213,91.53606,-12.054131,152.6638));
		vList.add(new Voter(70.45178,16.948532,-14.601982,36.679577));
		vList.add(new Voter(68.90234,51.39232,-77.53352,65.6584));
		vList.add(new Voter(-55.772472,35.312775,-68.90594,115.85158));
		vList.add(new Voter(-56.202793,-60.85752,63.09198,94.031166));
		vList.add(new Voter(20.886673,44.279846,30.279114,135.89627));
		vList.add(new Voter(-58.824394,-29.700172,-43.431725,156.31865));
		vList.add(new Voter(97.10953,47.826294,2.2998428,32.220863));
		vList.add(new Voter(29.921478,51.044876,22.142685,170.61269));
		vList.add(new Voter(77.54547,70.494736,-57.15921,164.03424));
		vList.add(new Voter(-20.175255,-81.28556,50.862473,45.59499));
		vList.add(new Voter(43.02475,-47.68231,45.616776,173.80643));
		vList.add(new Voter(-90.47898,88.5555,2.470337,166.96165));
		vList.add(new Voter(14.59243,-42.581238,90.5863,97.0157));
		vList.add(new Voter(12.5809555,17.516365,-29.003204,88.496315));
		vList.add(new Voter(94.474396,-28.385254,55.820816,159.27472));
		vList.add(new Voter(26.550186,-67.23793,-86.21817,113.02775));
		vList.add(new Voter(-53.46972,41.88121,61.922638,39.52812));
		vList.add(new Voter(-55.68869,-59.235237,-31.458366,5.7339907));
		vList.add(new Voter(16.443443,19.3331,-84.10777,0.8657932));
		vList.add(new Voter(57.959427,-67.76614,-80.77155,20.731712));
		vList.add(new Voter(85.84363,-92.58895,-14.396599,194.59764));
		vList.add(new Voter(72.45328,28.815186,13.814835,141.61613));
		vList.add(new Voter(-95.24671,-11.746811,6.5523605,28.587091));
		vList.add(new Voter(-70.375786,79.40192,85.76611,137.59334));
		vList.add(new Voter(-46.806515,-97.22881,99.3051,157.44226));
		vList.add(new Voter(-57.30431,7.064415,-14.152229,119.07333));
		vList.add(new Voter(45.48117,-6.261551,-40.925396,0.015163422));
		vList.add(new Voter(57.285995,32.020157,92.04744,140.06892));
		vList.add(new Voter(-90.30562,-13.762642,68.117935,118.76106));
		vList.add(new Voter(-73.06233,-48.271023,-67.22632,39.471878));
		vList.add(new Voter(49.977737,76.10147,77.15039,105.86143));
		vList.add(new Voter(19.536804,-53.887104,-67.8732,139.25443));
		vList.add(new Voter(-69.1947,-75.47206,3.7323608,12.615692));
		vList.add(new Voter(-44.443478,-5.936325,-34.08029,24.870909));
		vList.add(new Voter(10.014046,-84.176,3.5916672,31.458462));
		vList.add(new Voter(-80.12167,-63.184166,3.259529,21.610594));
		vList.add(new Voter(-8.6345215,-74.70914,-14.897247,94.06045));
		vList.add(new Voter(86.01608,-95.57376,0.8836899,150.37964));
		vList.add(new Voter(67.58917,-34.462723,57.65103,84.32291));
		vList.add(new Voter(-55.112766,33.516068,16.076706,97.36633));
		vList.add(new Voter(81.306656,32.053894,-68.63064,81.677055));
		vList.add(new Voter(39.846527,-52.40556,8.877167,64.27085));
		vList.add(new Voter(43.929764,52.668915,-81.25923,47.951256));
		vList.add(new Voter(75.51744,-54.30226,15.416649,79.25653));
		vList.add(new Voter(-78.42727,60.54454,-72.18022,50.1706));
		vList.add(new Voter(90.02713,50.741867,91.61569,43.507183));
		vList.add(new Voter(22.212646,-43.337597,-17.66784,72.00487));
		vList.add(new Voter(-41.42902,5.8996353,50.09436,64.250626));
		vList.add(new Voter(99.77818,-94.71408,-44.328762,108.182594));
		vList.add(new Voter(-69.197044,-24.52124,-56.962227,82.336));
		vList.add(new Voter(28.541916,-85.32423,-36.183964,159.0403));
		vList.add(new Voter(-4.631462,-93.80933,79.89026,40.9281));
		vList.add(new Voter(-4.8633804,95.3746,26.454971,146.47774));
		vList.add(new Voter(11.967072,35.363846,-88.86632,61.609577));
		vList.add(new Voter(5.7116623,59.665344,-23.89376,57.941402));
		vList.add(new Voter(-45.349026,94.56981,-41.96057,95.15728));
		vList.add(new Voter(-87.809555,-71.65296,-28.21611,191.6603));
		vList.add(new Voter(69.639175,-49.706173,-76.83464,96.48657));
		vList.add(new Voter(-75.71447,44.76117,-43.233215,24.209236));
		vList.add(new Voter(66.742966,-52.303505,-22.497513,136.73347));
		vList.add(new Voter(92.87317,-38.95967,-10.715309,150.57674));
		vList.add(new Voter(35.572144,79.17636,-12.441292,10.171008));
		vList.add(new Voter(-74.47554,-42.15994,-29.555618,157.26622));
		vList.add(new Voter(6.0102615,86.35788,-80.700424,19.633043));
		vList.add(new Voter(-73.56457,86.35422,95.47594,180.56038));
		vList.add(new Voter(-42.982365,-77.70691,35.74948,131.34521));
		vList.add(new Voter(40.69388,80.20271,-37.612736,74.93063));
		vList.add(new Voter(18.641426,50.079224,-8.811508,178.53918));
		vList.add(new Voter(-73.23396,74.819916,86.37306,170.67479));
		vList.add(new Voter(9.182037,34.75894,-82.735954,62.95285));
		vList.add(new Voter(81.2814,93.26103,-11.168289,135.2178));
		vList.add(new Voter(-97.21421,-2.716507,94.96835,154.29616));
		vList.add(new Voter(96.63933,-90.11749,56.601776,69.11191));
		vList.add(new Voter(-67.69603,-57.516384,11.316231,119.98817));
		vList.add(new Voter(-55.343437,-12.857903,0.037574768,65.62422));
		vList.add(new Voter(-1.9215927,-52.593433,-89.30999,30.947887));
		vList.add(new Voter(-51.58007,95.80286,-22.19912,41.901146));
		vList.add(new Voter(75.384674,-97.95791,-31.798386,183.94806));
		vList.add(new Voter(29.703629,-24.885391,-98.24613,110.05077));
		vList.add(new Voter(-8.4164505,-68.625725,-63.94559,57.017265));
		vList.add(new Voter(-99.24353,-32.91458,87.096054,98.08583));
		vList.add(new Voter(78.60242,-4.140236,-56.22971,171.60275));
		vList.add(new Voter(-93.04121,-32.255363,70.895874,53.52142));
		vList.add(new Voter(-2.8120499,66.847534,69.28024,173.68245));
		vList.add(new Voter(20.795143,78.33829,86.42551,66.52321));
		vList.add(new Voter(76.442276,-95.880974,-59.740353,165.74174));
		vList.add(new Voter(37.783066,10.686447,-48.785126,134.85352));
		vList.add(new Voter(15.4748535,24.641693,-26.27797,22.506487));
		vList.add(new Voter(-68.55537,3.4714584,3.4991837,59.464108));
		vList.add(new Voter(-46.427513,-55.206917,-83.23183,105.551056));
		vList.add(new Voter(-12.898041,-59.985138,4.7418213,107.43605));
		vList.add(new Voter(-68.889465,2.7265167,-87.48001,55.37617));
		vList.add(new Voter(-46.776474,-76.86014,15.172211,8.068824));
		vList.add(new Voter(35.49861,23.213638,-17.348373,184.27803));
		vList.add(new Voter(24.2435,-40.99457,-55.2138,158.27205));
		vList.add(new Voter(54.77397,-25.786957,-8.437141,19.30691));
		vList.add(new Voter(0.22148895,29.337112,-15.985611,105.01514));
		vList.add(new Voter(46.026825,-17.4216,37.122833,151.83998));
		vList.add(new Voter(56.40541,90.26849,26.271294,45.441376));
		vList.add(new Voter(66.66142,25.733376,-0.9550476,138.76933));
		vList.add(new Voter(-0.29447174,26.046623,-91.14338,39.354897));
		vList.add(new Voter(13.567505,96.80484,68.336395,170.0331));
		vList.add(new Voter(89.28313,-92.85636,19.187103,64.140175));
		vList.add(new Voter(68.596924,52.61989,79.8988,168.19423));
		vList.add(new Voter(54.90239,54.855835,-59.904324,158.77548));
		vList.add(new Voter(58.310394,97.13631,-24.760605,117.99742));
		vList.add(new Voter(59.389557,-1.7394409,-59.057724,101.453316));
		vList.add(new Voter(-98.22005,-72.71004,-66.61565,137.31198));
		vList.add(new Voter(20.48861,24.440315,60.538513,144.42216));
		vList.add(new Voter(42.302628,-26.092995,25.469612,95.59464));
		vList.add(new Voter(-67.40186,69.17268,73.39613,90.01584));
		vList.add(new Voter(-62.798405,-92.757454,72.11638,61.982643));
		vList.add(new Voter(10.31929,-27.176498,-17.432663,33.437824));
		vList.add(new Voter(-85.539154,44.871704,-87.41777,122.354675));
		vList.add(new Voter(13.440132,34.969864,40.352142,20.719982));
		vList.add(new Voter(-4.2396164,99.0728,-69.18916,143.17302));
		vList.add(new Voter(6.9268494,-58.68118,62.406815,74.37625));
		vList.add(new Voter(32.54857,31.50682,25.886444,79.64732));
		vList.add(new Voter(59.687714,-92.223755,-28.70594,124.62374));
		vList.add(new Voter(-94.89089,44.91101,63.032074,26.737));
		vList.add(new Voter(-7.678917,89.05997,82.27449,150.6451));
		vList.add(new Voter(-5.849777,-65.31122,-3.8267746,193.73529));
		vList.add(new Voter(46.753784,-66.96031,27.146027,84.21741));
		vList.add(new Voter(50.26381,-52.307926,-85.778534,146.65536));
		vList.add(new Voter(69.62178,27.025948,1.1958694,157.135));
		vList.add(new Voter(-41.327,-48.843765,30.615402,7.364762));
		vList.add(new Voter(76.440155,78.51889,13.837837,184.20424));
		vList.add(new Voter(-74.99367,-98.33809,-90.71083,24.391247));
		vList.add(new Voter(95.05502,0.46694183,25.265099,165.19093));
		vList.add(new Voter(92.40776,-77.83792,0.12135315,37.54991));
		vList.add(new Voter(-25.435135,29.874603,59.456573,161.95158));
		vList.add(new Voter(-58.888626,-55.473232,43.05017,47.01761));
		vList.add(new Voter(-10.155426,-1.362648,-1.8670425,61.082066));
		vList.add(new Voter(18.680313,55.721756,92.4236,167.20747));
		vList.add(new Voter(-27.999626,96.77106,-19.233994,167.76851));
		vList.add(new Voter(2.4297714,-2.34803,11.78566,96.773026));
		vList.add(new Voter(-48.470497,-79.25787,-37.497066,193.12643));
		vList.add(new Voter(5.124176,-86.136055,94.183426,68.297615));
		vList.add(new Voter(-86.34652,83.39378,14.874863,95.166626));
		vList.add(new Voter(0.85873413,10.716179,-25.788666,54.701744));
		vList.add(new Voter(34.23935,-22.997162,-6.583,12.626696));
		vList.add(new Voter(70.10634,-93.71004,15.393082,4.127395));
		vList.add(new Voter(89.9185,27.290436,41.83525,191.2598));
		vList.add(new Voter(41.230682,77.22748,80.133514,51.034664));
		vList.add(new Voter(17.458046,-46.250473,54.11209,143.77303));
		vList.add(new Voter(40.336945,-18.151878,19.356201,8.473253));
		vList.add(new Voter(35.13481,-39.55966,73.95259,107.45941));
		vList.add(new Voter(52.15175,-62.692406,-44.92537,184.96718));
		vList.add(new Voter(-67.19216,21.444786,75.22867,167.66975));
		vList.add(new Voter(41.69438,59.229263,71.52855,89.178314));
		vList.add(new Voter(87.579926,96.45949,37.58815,0.62122345));
		vList.add(new Voter(89.821304,-65.84976,-20.850883,86.490265));
		vList.add(new Voter(68.38454,14.546112,-91.84742,55.64164));
		vList.add(new Voter(-44.703007,-11.710297,-29.500435,153.88129));
		vList.add(new Voter(-44.470345,97.846985,-76.76445,144.8002));
		vList.add(new Voter(91.863525,-59.43972,48.4711,142.93106));
		vList.add(new Voter(-79.82478,-37.887062,53.271515,36.97616));
		vList.add(new Voter(20.852509,83.40794,74.3963,5.532825));
		vList.add(new Voter(-16.08368,-72.82079,29.652374,163.76949));
		vList.add(new Voter(88.20259,21.979523,-42.62496,62.85913));
		vList.add(new Voter(10.089729,98.064606,-86.0728,136.25824));
		vList.add(new Voter(19.316635,-79.718765,85.991165,5.3557277));
		vList.add(new Voter(66.11627,36.15802,77.82831,44.459713));
		vList.add(new Voter(-73.98749,52.40564,-10.269417,100.01477));
		vList.add(new Voter(-59.862755,29.995361,-23.15538,65.453316));
		vList.add(new Voter(-83.107956,-62.4316,-90.2057,50.905357));
		vList.add(new Voter(-4.601761,96.419235,20.570885,141.4751));
		vList.add(new Voter(15.772919,-50.38954,-42.367016,109.91545));
		vList.add(new Voter(-97.72099,-4.547264,-30.18032,5.8954));
		vList.add(new Voter(-97.6013,34.785095,44.4122,166.88629));
		vList.add(new Voter(-99.43661,-73.99249,23.490166,32.84236));
		vList.add(new Voter(55.462067,46.06369,-24.249779,61.79676));
		vList.add(new Voter(-86.51135,-15.414322,97.44623,65.33599));
		vList.add(new Voter(0.04736328,7.8576813,23.453651,56.381584));
		vList.add(new Voter(60.308685,-84.575905,-56.836403,137.14877));
		vList.add(new Voter(-60.081745,-38.031376,-90.391945,78.54415));
		vList.add(new Voter(95.5513,-41.93158,-94.33592,45.21036));
		vList.add(new Voter(89.64688,-86.25783,68.26436,10.150957));
		vList.add(new Voter(40.84453,-92.846405,78.262344,52.22573));
		vList.add(new Voter(-87.59891,-3.1842194,86.094406,127.27152));
		vList.add(new Voter(-30.867317,39.20656,-24.091133,3.2773852));
		vList.add(new Voter(16.276947,-94.48577,-34.22869,21.653961));
		vList.add(new Voter(-48.701904,-67.4242,19.420158,25.53394));
		vList.add(new Voter(65.38347,-94.139114,-95.53583,133.20312));
		vList.add(new Voter(-18.350555,9.1315,99.64542,146.78912));
		vList.add(new Voter(-78.54254,-70.66326,34.718292,5.4546356));
		vList.add(new Voter(61.433548,60.169296,73.6264,16.406404));
		vList.add(new Voter(-52.393948,-22.066483,36.12581,139.51491));
		vList.add(new Voter(-61.52792,83.98949,34.06549,41.346443));
		vList.add(new Voter(-22.154388,-75.28907,93.5739,66.66361));
		vList.add(new Voter(76.220474,58.912598,-11.075989,60.30575));
		vList.add(new Voter(84.42493,-19.017586,-48.509132,185.7916));
		vList.add(new Voter(56.991592,3.0315628,-10.268471,170.59694));
		vList.add(new Voter(-40.507843,19.417595,-6.607033,19.074177));
		vList.add(new Voter(11.78154,30.789398,-44.80597,95.25186));
		vList.add(new Voter(68.48418,-8.236,-37.8322,27.75569));
		vList.add(new Voter(13.081108,-93.48933,50.947144,131.93138));
		vList.add(new Voter(-70.31197,60.55435,-71.087036,199.64839));
		vList.add(new Voter(67.250916,16.304054,-93.19223,60.57613));
		vList.add(new Voter(-72.25569,-23.919914,16.78122,70.92478));
		vList.add(new Voter(-0.5160446,-67.70793,-20.363747,3.3349633));
		vList.add(new Voter(-21.567642,73.075455,-8.833458,77.009544));
		vList.add(new Voter(-62.925304,26.913582,2.9279022,128.15878));
		vList.add(new Voter(-72.102104,35.971252,-61.302017,140.85326));
		vList.add(new Voter(65.65898,-89.91661,-96.48848,66.54955));
		vList.add(new Voter(-8.446434,87.240295,74.89133,1.5972495));
		vList.add(new Voter(58.28418,8.282349,11.239716,176.30518));
		vList.add(new Voter(16.203712,90.272,43.9411,162.61479));
		vList.add(new Voter(58.61487,-17.809341,39.31375,121.70325));
		vList.add(new Voter(83.51437,26.376656,-95.98155,95.14133));
		vList.add(new Voter(-62.726166,88.265884,-29.10614,66.41759));
		vList.add(new Voter(-36.229443,4.9339676,-72.426895,72.18175));
		vList.add(new Voter(-65.735596,29.70636,51.903183,78.56348));
		vList.add(new Voter(-24.067757,-3.6345139,-11.479202,127.110825));
		vList.add(new Voter(-49.385296,-86.4702,-39.558315,132.61874));
		vList.add(new Voter(-86.67799,39.52339,56.82965,132.35785));
		vList.add(new Voter(58.82997,33.03586,99.98422,159.56987));
		vList.add(new Voter(53.846268,-31.747116,-24.097404,75.794426));
		vList.add(new Voter(64.4348,-71.289635,46.544495,144.48312));
		vList.add(new Voter(89.47342,-73.70062,59.285126,75.92027));
		vList.add(new Voter(-30.168411,-54.331444,69.24466,99.80318));
		vList.add(new Voter(81.76204,95.39574,-89.38893,121.66831));
		vList.add(new Voter(-33.10231,-97.977295,-60.761906,53.032448));
		vList.add(new Voter(78.5524,-51.72137,44.33101,148.62756));
		vList.add(new Voter(-83.81128,-89.90017,-56.309307,179.04643));
		vList.add(new Voter(11.505569,-43.452477,-35.348022,70.70807));
		vList.add(new Voter(-41.68966,51.22307,-70.466324,80.15169));
		vList.add(new Voter(-65.00613,32.693573,-53.751385,174.74944));
		vList.add(new Voter(-53.03283,94.810165,-84.04096,171.09473));
		vList.add(new Voter(-36.08259,66.290054,52.68985,55.30051));
		vList.add(new Voter(-6.608307,-26.168655,-64.86367,161.5816));
		vList.add(new Voter(21.341278,-73.75043,-72.84273,17.774761));
		vList.add(new Voter(-31.697884,81.207596,87.38725,145.4697));
		vList.add(new Voter(-83.58142,44.217896,-5.085579,10.411989));
		vList.add(new Voter(-79.76687,35.520096,-69.937386,3.6442995));
		vList.add(new Voter(-61.11518,-31.41214,-71.88074,58.954178));
		vList.add(new Voter(38.028778,-20.560158,58.623703,106.69507));
		vList.add(new Voter(78.47908,84.28125,-59.045635,72.669205));
		vList.add(new Voter(10.482117,-79.423706,83.93822,63.857796));
		vList.add(new Voter(-44.031715,30.360168,-93.31726,166.33325));
		vList.add(new Voter(17.551743,-98.01769,-38.441658,106.28954));
		vList.add(new Voter(-12.979294,15.693985,18.119682,100.00892));
		vList.add(new Voter(-74.71988,98.34215,-13.242981,15.596188));
		vList.add(new Voter(-9.004524,32.321518,-50.856136,76.93276));
		vList.add(new Voter(-49.5155,73.90817,-66.64462,112.633095));
		vList.add(new Voter(3.7850342,96.81268,17.253944,159.55273));
		vList.add(new Voter(-88.513695,9.541023,-15.117073,106.95135));
		vList.add(new Voter(57.167694,-88.15272,95.80943,164.73209));
		vList.add(new Voter(-12.410019,-91.25308,83.36948,173.86319));
		vList.add(new Voter(-53.301895,-66.606705,-20.522346,81.36328));
		vList.add(new Voter(72.71803,26.395119,-95.92446,73.95253));
		vList.add(new Voter(-74.01668,-46.71923,-32.458702,17.1121));
		vList.add(new Voter(-72.446144,28.837418,53.726288,58.956944));
		vList.add(new Voter(37.262817,-37.36869,-2.8960342,25.737906));
		vList.add(new Voter(9.739601,90.44061,85.321045,118.30027));
		vList.add(new Voter(16.530952,48.51773,-68.13628,92.413864));
		vList.add(new Voter(93.121475,59.082,-75.65097,12.155592));
		vList.add(new Voter(-3.9894104,-5.6080017,-7.9920197,61.69623));
		vList.add(new Voter(-25.26976,-18.052948,-90.75052,109.77048));
		vList.add(new Voter(-32.39276,-95.76611,-3.0850143,181.2692));
		vList.add(new Voter(-87.87013,73.00751,63.211807,105.88754));
		vList.add(new Voter(-31.95691,-48.963142,84.73102,4.317963));
		ArrayList<Candidate> cList = new ArrayList<>();
		cList.add(new Candidate(-66.03712,24.846855,34.919815,23.445404));
		cList.add(new Candidate(-0.30943298,62.161682,71.52443,44.359493));
		cList.add(new Candidate(22.965958,20.039871,-27.39849,127.346146));
		cList.add(new Candidate(10.695801,-2.7476654,17.600822,8.586788));
		cList.add(new Candidate(-16.575241,81.081314,28.753738,71.92739));
		cList.add(new Candidate(23.802094,48.82277,79.696396,49.259056));
		cList.add(new Candidate(-26.017586,-87.10176,32.169098,183.8785));
		cList.add(new Candidate(-74.6457,-98.71254,-54.850662,67.39707));
		cList.add(new Candidate(11.911156,-61.73048,-90.60017,42.69179));
		cList.add(new Candidate(-95.71487,21.122185,67.78194,79.01906));
		cList.add(new Candidate(36.402145,4.0149918,89.55179,62.341618));
		cList.add(new Candidate(65.45459,-80.99376,-44.891106,11.379337));
		cList.add(new Candidate(-43.876423,44.606018,-15.690994,0.7353544));
		cList.add(new Candidate(-67.46567,-75.78939,92.61998,35.148598));
		cList.add(new Candidate(-99.75711,29.887863,99.3472,27.582062));
		cList.add(new Candidate(2.6988373,-57.838642,-66.73156,58.200825));
		cList.add(new Candidate(42.303543,-5.106041,3.802742,166.67624));
		cList.add(new Candidate(18.705727,28.021011,-71.07123,107.64892));
		cList.add(new Candidate(72.793045,52.270523,61.220856,195.19537));
		cList.add(new Candidate(-16.48233,-97.70474,35.47075,8.997404));
		cList.add(new Candidate(58.933243,21.619652,-91.584816,30.46192));
		cList.add(new Candidate(-41.56096,-41.1142,84.22923,34.757042));
		cList.add(new Candidate(49.170044,75.1077,-42.07176,63.72154));
		cList.add(new Candidate(-42.189766,71.67493,80.03206,39.593124));
		cList.add(new Candidate(-44.965565,-5.0251465,95.290405,10.841274));
		cList.add(new Candidate(-18.376541,-7.3592453,59.581238,25.05524));
		cList.add(new Candidate(-25.507545,66.121216,44.032623,41.43275));
		cList.add(new Candidate(11.9935,-47.333336,23.865334,84.16354));
		cList.add(new Candidate(-91.40338,85.73309,-20.58387,20.757092));
		cList.add(new Candidate(40.238068,25.622177,44.414062,64.60237));
		ArrayList<Party> pList = new ArrayList<>();
		pList.add(new Party(-32.80287,61.95317,86.099976));
		pList.add(new Party(-47.13025,88.39169,96.956955));
		pList.add(new Party(-64.41169,-41.000748,59.66594));
		pList.add(new Party(94.88628,75.47516,48.81523));
		pList.add(new Party(-57.70167,89.963135,83.73245));
		
		ArrayList<Candidate> winners = new ArrayList<>();
		FirstPastThePost election1 = new FirstPastThePost(vList, cList, pList);
		FlatApproval election2 = new FlatApproval(vList, cList, pList);
		Bucklin election3 = new Bucklin(vList, cList, pList);
		InstantRunoff election4 = new InstantRunoff(vList, cList, pList);
		
		RepScore repScore1 = new RepScore(election1);
		RepScore repScore2 = new RepScore(election2);
		RepScore repScore3 = new RepScore(election3);
		RepScore repScore4 = new RepScore(election4);

		System.out.println("Start");
		winners.add(makeElection(election1));
		winners.add(makeElection(election1));
		winners.add(makeElection(election1));
		winners.add(makeElection(election1));
		winners.add(makeElection(election1));
		winners.add(null);
		winners.add(makeElection(election2));
		winners.add(makeElection(election2));
		winners.add(makeElection(election2));
		winners.add(makeElection(election2));
		winners.add(makeElection(election2));
		winners.add(null);
		winners.add(makeElection(election3));
		winners.add(makeElection(election3));
		winners.add(makeElection(election3));
		winners.add(makeElection(election3));
		winners.add(makeElection(election3));
		winners.add(null);
		winners.add(makeElection(election4));
		winners.add(makeElection(election4));
		winners.add(makeElection(election4));
		winners.add(makeElection(election4));
		winners.add(makeElection(election4));
		System.out.println();
		System.out.println();
		repScore1.makeMeasure();
		repScore2.makeMeasure();
		repScore3.makeMeasure();
		repScore4.makeMeasure();
		System.out.println();
		System.out.println();
		for (Candidate w: winners) {
			System.out.println(w);
		}
	}

	public static Candidate makeElection(VotingSystem election) {
		for (Candidate c: election.getCandList()) {
			election.assignParty(c, election.getPartyList());
		}
		for (Candidate c: election.getCandList()) {
			if (c.getParty().getIndy() == true) {
				election.getPartyList().add(c.getParty());
			}
		}
		for (Voter v: election.getVoterList()) {
			election.assignParty(v, election.getPartyList());
		}
		
		election.giveVotes(election.getVoterList(), election.getCandList());
		election.add(election.findWin(election.getVoterList(), election.getCandList()));
		
		System.out.println();
		System.out.println();
		for (Party p: election.getPartyList()) {
			System.out.print(p);
			p.distributeFunding();
		}
		election.drop();
		election.reset();
		return election.getWinList().get(0);
	}
	
	//list generating methods
	public static ArrayList<Voter> makeVoterList(int n) {
		ArrayList<Voter> list = new ArrayList<>();
		for (int j=0; j<n; j++) {
			list.add(new Voter());
		}
		return list;	
	}
	public static ArrayList<Candidate> makeCandList(int n) {
		ArrayList<Candidate> list = new ArrayList<>();
		for (int j=0; j<n; j++) {
			list.add(new Candidate());
		}
		return list;	
	}
	public static ArrayList<Party> makePartyList(int n) {
		ArrayList<Party> list = new ArrayList<>();
		for (int j=0; j<n; j++) {
			list.add(new Party());
		}
		return list;	
	}
	
}
